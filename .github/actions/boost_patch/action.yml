name: 'Boost Patch'
description: 'This workflow patches the boost source directory with other candidate libraries'
inputs:
  name:
    description: 'Name of the patch library.'
    required: true
  repo:
    description: 'Repository of the patch library.'
    required: true
  branch:
    description: 'Branch of the patch library'
    required: true
  boost_dir:
    description: 'The boost directory. The default value assumes boost is in-source.'
    required: true

runs:
  using: "composite"
  steps:
    - name: Environment
      id: ctx
      shell: bash
      run: |
        patch_hash=$(git ls-remote ${{ inputs.repo }} ${{ inputs.branch }} | awk '{ print $1 }')
        echo "patch_hash=$patch_hash" >> $GITHUB_OUTPUT

    # if boost came with boost.${{ inputs.name }} from the cache, we remove it.
    - name: boost.${{ inputs.name }} remove
      uses: JesseTG/rm@v1.0.3
      if: steps.cache-boost.outputs.cache-hit == 'true'
      with:
        path: ${{ inputs.boost_dir }}/libs/${{ inputs.name }}

    # we then get boost.${{ inputs.name }} from the cache or clone it.
    - name: boost.${{ inputs.name }} cache
      id: cache-patch
      uses: actions/cache@v3
      with:
        path: ${{ inputs.boost_dir }}/libs/${{ inputs.name }}
        key: ${{ runner.os }}-${{ inputs.name }}-${{ steps.ctx.outputs.patch_hash }}

    - name: boost.${{ inputs.name }} patch
      if: steps.cache-patch.outputs.cache-hit != 'true'
      shell: bash
      working-directory: ${{ inputs.boost_dir }}/libs
      run: |
        git clone ${{ inputs.repo }} -b ${{ steps.ctx.outputs.default_branch }} ${{ inputs.name }}
